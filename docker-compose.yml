services:
  postgres:
    image: ankane/pgvector:latest 
    container_name: aica_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - ${POSTGRES_PORT}:5432 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 30s
      retries: 5
    attach: false
    
  redis:
    image: redis:7-alpine
    container_name: aica_redis
    ports:
      - "6379:6379"

  api:
    build: .
    container_name: aica_api
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
    command: uvicorn aica_backend.api.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  worker:
    build: .
    container_name: aica_worker
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    command: celery -A aica_backend.workers.celery_app.celery_app worker --loglevel=info -P gevent
    depends_on:
      - redis
      - postgres

  scheduler:
    build: .
    container_name: aica_scheduler
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    command: celery -A aica_backend.workers.celery_app.celery_app beat -l info
    depends_on:
      - redis
      - postgres

volumes:
  postgres_data: